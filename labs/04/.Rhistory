ls()
pickup <- read.csv("/course/users/crob873/lab-4/pickup-2010-01-08.txt", header=FALSE)
names(pickup) <- c("time", "lon", "lat")
str(pickup)
table(substr(pickup$time, 0, 10))
plot(lon ~ lat, data=pickup)
pickup <- subset(pickup, 40.4 <= lat & lat <= 41.1 & -74.5 <= lon & lon <= -73.5)
by_hour <- lapply(0:23, FUN = function(x) subset(pickup, as.integer(substr(time, 12, 13)) == x))
plot(1:24, sapply(by_hour, nrow))
fs <- read.csv("/course/data/fsquare/dataset_TIST2015_POIs.txt")
str(fs)
fs <- readr::read_csv("/course/data/fsquare/dataset_TIST2015_POIs.txt", delim="\t")
?reader::read_csv
?readr::read_csv
fs <- readr::read_tsv("/course/data/fsquare/dataset_TIST2015_POIs.txt")
str(fs)
q()
fs <- readr::read_tsv("/course/data/fsquare/dataset_TIST2015_POIs.txt", col_names=c("id", "lat", "lon", "type", "country"))
str(fs)
fs <- readr::read_tsv("/course/data/fsquare/dataset_TIST2015_POIs.txt", col_names=c("id", "lat", "lon", "type", "country"), show_col_types=FALSE)
str(fs)
by_hour
ls
ls()
clear()
str(by_hour)
str(by_hour[8])
str(by_hour[9])
str(fs)
x = by_hour[9][1,]
x = by_hour[9][1]
str(x)
x = by_hour[9][[1]]
str(x)
x = by_hour[[9]]
str(x)
x = by_hour[[9]][1,]
str(x)
dist = sqrt((x$lon - fs$lon)^2 + (x$lat - fs$lat)^2)
str(dist)
which.min(dist)
dist[1752884]
closest <- rep(0, nrow(by_hour[[9]]))
str(closest)
apply(by_hour[[9]][1:3,], axis=1, FUN=function(x) {which.min(sqrt((x$lon - fs$lon)^2 + (x$lat - fs$lat)^2))}
)
apply(by_hour[[9]][1:3,], margin=1, FUN=function(x) {which.min(sqrt((x$lon - fs$lon)^2 + (x$lat - fs$lat)^2))})
apply(by_hour[[9]][1:3,], MARGIN=1, FUN=function(x) {which.min(sqrt((x$lon - fs$lon)^2 + (x$lat - fs$lat)^2))})
apply(by_hour[[9]][1:3,], MARGIN=2, FUN=function(x) {which.min(sqrt((x$lon - fs$lon)^2 + (x$lat - fs$lat)^2))})
sapply(by_hour[[9]][1:3,], MARGIN=1, FUN=function(x) {which.min(sqrt((x$lon - fs$lon)^2 + (x$lat - fs$lat)^2))})
apply(by_hour[[9]][1:3,], MARGIN=2, FUN=function(x) {which.min(sqrt((x["lon"] - fs$lon)^2 + (x["lat"] - fs$lat)^2))})
apply(by_hour[[9]][1:3,], MARGIN=1, FUN=function(x) {which.min(sqrt((x["lon"] - fs$lon)^2 + (x["lat"] - fs$lat)^2))})
apply(by_hour[[9]][1:3,], MARGIN=1, FUN=function(x) {x["lat"]})
apply(by_hour[[9]][1:3,], MARGIN=1, FUN=function(x) {x["lat"] + x["lon"]})
str(fs)
str(by_hour[[9]])
str(by_hour[[9]][1,)
str(by_hour[[9]][1,])
as.vector(by_hour[[9]][1,])
str(as.vector(by_hour[[9]][1,]))
pickups
pickups <- by_hour[[9]]
small_fs <- fs[1:10,]
small_fs
apply([1:3,], MARGIN=1, FUN=function(x) {x["lat"] + x["lon"]})
apply(pickups[1:3,], MARGIN=1, FUN=function(x) {which.min(sqrt((x["lon"] - small_fs$lon)^2 + (x["lat"] - small_fs$lat)^2))})
dist <- function(x, y) { sqrt((x["lon"] - y["lon"])^2 + (x["lat"] - y["lat"])^2) }
dist(pickups[1,], small_fs[1,])
apply(pickups[1:3,], MARGIN=1, FUN=function(x) { which.min(dist(x, small_fs)) })
apply(pickups[1:3,], MARGIN=1, FUN=function(x) { str(x) })
dist <- function(x, y) { sqrt((as.numeric(x["lon"]) - y["lon"])^2 + (as.numeric(x["lat"]) - y["lat"])^2) }
dist(pickups[1,], small_fs[1,])
apply(pickups[1:3,], MARGIN=1, FUN=function(x) { which.min(dist(x, small_fs)) })
dist <- function(x, y) { sqrt((as.numeric(x["lon"]) - y$lon)^2 + (as.numeric(x["lat"]) - y$lat)^2) }
dist(pickups[1,], small_fs[1,])
apply(pickups[1:3,], MARGIN=1, FUN=function(x) { which.min(dist(x, small_fs)) })
x
small_fx
small_fs
apply(pickups, MARGIN=1, FUN=function(x) { which.min(dist(x, small_fs)) })
mins <- apply(pickups, MARGIN=1, FUN=function(x) { which.min(dist(x, small_fs)) })
mins <- apply(pickups, MARGIN=1, FUN=function(x) { which.min(dist(x, fs)) })
system.time(mins <- apply(pickups, MARGIN=1, FUN=function(x) { which.min(dist(x, small_fs)) }))
system.time(mins <- apply(pickups, MARGIN=1, FUN=function(x) { which.min(dist(x, fs[1:100,])) }))
str(mins)
str(pickups)
system.time(mins <- apply(pickups, MARGIN=1, FUN=function(x) { which.min(dist(x, fs[1:10,])) }))
system.time(mins <- apply(pickups, MARGIN=1, FUN=function(x) { which.min(dist(x, fs[1:10,])) }))
system.time(mins <- apply(pickups, MARGIN=1, FUN=function(x) { which.min(dist(x, fs[1,])) }))
str(mins)
dist(pickups[1:2], fs[1:2])
dist(pickups[1], fs[1:2])
dist(pickups[1], fs[1:2,])
dist(pickups[1,], fs[1:2,])
str(dist(pickups[1,], fs[1:2,]))
do.call(dist, pickups[1:2,], fs[1:2,])
do.call(function(x, y,...) dist(x,y), pickups[1:2,], fs[1:2,])
do.call(dist, list(x=pickups[1:2,], y=fs[1:2,]))
do.call("dist", list(x=pickups[1:2,], y=fs[1:2,]))
do.call("dist", x=pickups[1:2,], y=fs[1:2,])
system.time(mins <- apply(pickups, MARGIN=1, FUN=function(x) { which.min(dist(x, fs[1:10,])) }))
str(mins)
max(fs[,"lat"])
min(fs[,"lon"])
small_fs <- subset(fs, min(pickups$lat) -1 < lat, lat < max(pickups$lat) + 1, min(pickups$lon) - 1 < lon, lon < max(pickups$lon) + 1)
str(fs)
small_fs <- subset(fs, min(pickups$lat) -1 < lat, lat < max(pickups$lat) + 1, min(pickups$lon) - 1 < lon, lon < max(pickups$lon) + 1)
small_fs <- subset(fs, min(pickups$lat) -1 < fs$lat, fs$lat < max(pickups$lat) + 1, min(pickups$lon) - 1 < fs$lon, fs$lon < max(pickups$lon) + 1)
q()
