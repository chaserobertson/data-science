q()
pwd()
q()
knitr::opts_chunk$set(echo = TRUE)
d$year <- format(d$day, "%Y")
knitr::opts_chunk$set(echo = TRUE)
library(jsonlite)
jd <- read_json("akl.json", simplifyVector = TRUE)
str(jd)
d <- data.frame(day = as.Date(jd$daily$time),
min = jd$daily$temperature_2m_min,
max = jd$daily$temperature_2m_max)
str(d)
sum(is.na(d))
summary(d)
d$year <- format(d$day, "%Y")
d$avg <- (d$min + d$max) / 2
avg <- aggregate(avg ~ year, data=d, FUN=mean)
str(avg)
d$year <- as.integer(format(d$day, "%Y"))
d$avg <- (d$min + d$max) / 2
avg <- aggregate(avg ~ year, data=d, FUN=mean)
str(avg)
d$year <- as.integer(format(d$day, "%Y"))
d$avg <- (d$min + d$max) / 2
d$avg
avg <- aggregate(avg ~ year, data=d, FUN=mean)
str(avg)
d$year <- as.integer(format(d$day, "%Y"))
d$avg <- (d$min + d$max) / 2
avg <- aggregate(avg ~ year, data=d, FUN=mean)
str(avg)
train <- subset(avg, year <= 2014)
summary(train)
test <- subset(avg, year > 2014)
summary(test)
train <- subset(avg, year <= 2014)
test <- subset(avg, year > 2014)
mean_model <- mean(train$avg)
linear_model <- lm(avg ~ year, data=train)
mean_pred <- rep(mean_model, nrow(test))
linear_pred <- predict(test, linear_model)
train <- subset(avg, year <= 2014)
test <- subset(avg, year > 2014)
mean_model <- mean(train$avg)
linear_model <- lm(avg ~ year, data=train)
mean_pred <- rep(mean_model, nrow(test))
linear_pred <- predict(linear_model, test)
mean_pred
linear_pred
train <- subset(avg, year <= 2014)
test <- subset(avg, year > 2014)
mean_model <- mean(train$avg)
linear_model <- lm(avg ~ year, data=train)
mean_pred <- rep(mean_model, nrow(test))
linear_pred <- predict(linear_model, test)
rmse <- function(actual, predicted) {
sqrt(mean((actual - predicted) ^ 2))
}
cat("RMSE for mean:", fill=T)
rmse(test$avg, mean_pred)
cat("RMSE for linear model:", fill=T)
rmse(test$avg, linear_pred)
plot(avg ~ year, data=avg, type='l',
xlab='Year', ylab='Average Temperature')
abline(h=mean_model, col='blue')
abline(linear_model, col='red')
abline(v=test$year[1], lty=2)
plot(avg ~ year, data=avg, type='l',
xlab='Year', ylab='Annual Avg Temperature')
abline(h=mean_model, col='blue')
abline(linear_model, col='red')
abline(v=test$year[1], lty=2)
train <- subset(avg, year <= 2014)
test <- subset(avg, year > 2014)
mean_model <- mean(train$avg)
linear_model <- lm(avg ~ year, data=train)
mean_pred <- rep(mean_model, nrow(test))
linear_pred <- predict(linear_model, test)
rmse <- function(actual, predicted) {
sqrt(mean((actual - predicted) ^ 2))
}
mean_model
cat("RMSE for mean:", fill=T)
rmse(test$avg, mean_pred)
linear_model
cat("RMSE for linear model:", fill=T)
rmse(test$avg, linear_pred)
train <- subset(avg, year <= 2014)
test <- subset(avg, year > 2014)
mean_model <- mean(train$avg)
linear_model <- lm(avg ~ year, data=train)
mean_pred <- rep(mean_model, nrow(test))
linear_pred <- predict(linear_model, test)
rmse <- function(actual, predicted) {
sqrt(mean((actual - predicted) ^ 2))
}
cat("RMSE for mean:", fill=T)
rmse(test$avg, mean_pred)
cat("RMSE for linear model:", fill=T)
rmse(test$avg, linear_pred)
tail(test)
tail(test)
d
tail(test)
d$month <- format(d$day, "%m")
d
tail(test)
d$month <- as.integer(format(d$day, "%m"))
d
tail(test)
d$month <- as.integer(format(d$day, "%m"))
monthly_avgs <- aggregate(avg ~ month, data=d, FUN=mean)
monthly_avgs
tail(test)
d$month <- as.integer(format(d$day, "%m"))
train <- subset(d, year <= 2014)
monthly_avgs <- aggregate(avg ~ month, data=train, FUN=mean)
monthly_avgs
train <- subset(avg, year <= 2014)
test <- subset(avg, year > 2014)
mean_model <- mean(train$avg)
linear_model <- lm(avg ~ year, data=train)
mean_pred <- rep(mean_model, nrow(test))
linear_pred <- predict(linear_model, test)
rmse <- function(actual, predicted) {
sqrt(mean((actual - predicted) ^ 2))
}
cat("RMSE for mean:", fill=T)
rmse(test$avg, mean_pred)
cat("RMSE for linear model:", fill=T)
rmse(test$avg, linear_pred)
plot(avg ~ year, data=avg, type='l',
xlab='Year', ylab='Annual Avg Temperature')
abline(h=mean_model, col='blue')
abline(linear_model, col='red')
abline(v=test$year[1], lty=2)
tail(test)
d$month <- as.integer(format(d$day, "%m"))
train <- subset(d, year <= 2014)
test <- subset(d, year > 2014)
monthly_avgs <- aggregate(avg ~ month, data=train, FUN=mean)
avg2022 <- c(subset(test$avg, year >= 2022), monthly_avgs[7:])
tail(test)
d$month <- as.integer(format(d$day, "%m"))
train <- subset(d, year <= 2014)
test <- subset(d, year > 2014)
monthly_avgs <- aggregate(avg ~ month, data=train, FUN=mean)
avg2022 <- c(subset(test$avg, year >= 2022), monthly_avgs[7:end])
tail(test)
d$month <- as.integer(format(d$day, "%m"))
train <- subset(d, year <= 2014)
test <- subset(d, year > 2014)
monthly_avgs <- aggregate(avg ~ month, data=train, FUN=mean)
avg2022 <- c(subset(test$avg, year >= 2022), monthly_avgs[7:12])
tail(test)
d$month <- as.integer(format(d$day, "%m"))
train <- subset(d, year <= 2014)
test <- subset(d, year > 2014)
monthly_avgs <- aggregate(avg ~ month, data=train, FUN=mean)
avg2022 <- c(subset(test, year >= 2022, select=avg), monthly_avgs[7:12])
tail(test)
d$month <- as.integer(format(d$day, "%m"))
train <- subset(d, year <= 2014)
test <- subset(d, year > 2014)
monthly_avgs <- aggregate(avg ~ month, data=train, FUN=mean)
avg2022 <- c(subset(test, year >= 2022, select="avg"), monthly_avgs[7:12])
tail(test)
d$month <- as.integer(format(d$day, "%m"))
train <- subset(d, year <= 2014)
test <- subset(d, year > 2014)
monthly_avgs <- aggregate(avg ~ month, data=train, FUN=mean)
avg2022 <- c(subset(test, year >= 2022, select=avg), monthly_avgs[7:12])
tail(test)
d$month <- as.integer(format(d$day, "%m"))
train <- subset(d, year <= 2014)
test <- subset(d, year > 2014)
monthly_avgs <- aggregate(avg ~ month, data=train, FUN=mean)
avg2022 <- c(subset(test, year >= 2022, select=avg), monthly_avgs[7:12,"avg"])
avg2022
tail(test)
d$month <- as.integer(format(d$day, "%m"))
train <- subset(d, year <= 2014)
test <- subset(d, year > 2014)
train_monthly_avgs <- aggregate(avg ~ month, data=train, FUN=mean)
avg2022 <- c(subset(test, year >= 2022, select=avg),
subset(train_monthly_avgs, month >= 7, select=avg))
avg2022
d$month <- as.integer(format(d$day, "%m"))
d$avg <- (d$min + d$max) / 2
avg <- aggregate(avg ~ month, data=d, FUN=mean)
str(avg)
d$year <- as.integer(format(d$day, "%Y"))
d$month <- as.integer(format(d$day, "%m"))
d$avg <- (d$min + d$max) / 2
avg <- aggregate(avg ~ year + month, data=d, FUN=mean)
str(avg)
d$year <- as.integer(format(d$day, "%Y"))
d$month <- as.integer(format(d$day, "%m"))
d$avg <- (d$min + d$max) / 2
avg <- aggregate(avg ~ month + year, data=d, FUN=mean)
str(avg)
